/**
 * Event-Merchandise aggregator prosumer
 * This is a RESTful API that fetch and aggregates info on an event with the list of merchandise.
 *
 * OpenAPI spec version: 0.1.0
 * Contact: dario.dercole@student.univaq.it
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

package io.swagger.api;

import static org.junit.Assert.assertNotNull;

import java.util.ArrayList;
import java.util.Collections;
import java.util.List;

import org.apache.cxf.jaxrs.client.ClientConfiguration;
import org.apache.cxf.jaxrs.client.JAXRSClientFactory;
import org.apache.cxf.jaxrs.client.WebClient;
import org.junit.Before;
import org.junit.Test;

import com.fasterxml.jackson.jaxrs.base.ProviderBase;
import com.fasterxml.jackson.jaxrs.json.JacksonJsonProvider;

import io.swagger.model.EventWithMerch;




/**
 * Event-Merchandise aggregator prosumer
 *
 * <p>This is a RESTful API that fetch and aggregates info on an event with the list of merchandise.
 *
 * API tests for DefaultApi 
 */
public class DefaultApiTest {


    private DefaultApi api;
    
    @Before
    public void setup() {
        JacksonJsonProvider provider = new JacksonJsonProvider();
        //List<ProviderBase> providers = new ArrayList<>();
        //providers.add(provider);  
        api = JAXRSClientFactory.create("http://localhost:8083/api/event-merch-prosumer-rest", DefaultApi.class, Collections.singletonList(provider));
        org.apache.cxf.jaxrs.client.Client client = WebClient.client(api);
        
        ClientConfiguration config = WebClient.getConfig(client);
        config.getInInterceptors().add(new org.apache.cxf.interceptor.LoggingInInterceptor());
        config.getOutInterceptors().add(new org.apache.cxf.interceptor.LoggingOutInterceptor());
    }

    /**
     * Show the aggregation for the Event with its own Merchandise.
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void getEventInfo1Test() {
        Long eventId = 0L;
        EventWithMerch response = api.getEventInfo1(eventId);
        assertNotNull(response);
        // TODO: test validations
        
        
    }
}
